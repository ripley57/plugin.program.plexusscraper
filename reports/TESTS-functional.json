[
    {
        "keyword": "Feature",
        "name": "Extract acestream and sopcast links from a web page",
        "tags": [
            {
                "name": "@functional",
                "line": 2
            },
            {
                "name": "@fixture.external_website",
                "line": 2
            }
        ],
        "elements": [
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Extract links given the path to a local html file -- @1.1 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "the local file tests/resources/html/sample_1.html",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:6",
                            "arguments": [
                                {
                                    "value": "tests/resources/html/sample_1.html",
                                    "name": "file_path"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0011644363403320312
                        },
                        "line": 7
                    },
                    {
                        "keyword": "When",
                        "name": "I extract all links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:16",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.342522382736206
                        },
                        "line": 8
                    },
                    {
                        "keyword": "Then",
                        "name": "I should get 5 acestream links and 4 sopcast links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:26",
                            "arguments": [
                                {
                                    "value": 5,
                                    "name": "ace_count",
                                    "original": "5"
                                },
                                {
                                    "value": 4,
                                    "name": "sop_count",
                                    "original": "4"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005364418029785156
                        },
                        "line": 9
                    }
                ],
                "line": 13,
                "uri": "tests/behave/extract_links.feature",
                "description": "",
                "id": 1
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Extract links given the path to a local html file -- @1.2 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "the local file tests/resources/html/sample_2.html",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:6",
                            "arguments": [
                                {
                                    "value": "tests/resources/html/sample_2.html",
                                    "name": "file_path"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005557537078857422
                        },
                        "line": 7
                    },
                    {
                        "keyword": "When",
                        "name": "I extract all links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:16",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.1867198944091797
                        },
                        "line": 8
                    },
                    {
                        "keyword": "Then",
                        "name": "I should get 7 acestream links and 5 sopcast links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:26",
                            "arguments": [
                                {
                                    "value": 7,
                                    "name": "ace_count",
                                    "original": "7"
                                },
                                {
                                    "value": 5,
                                    "name": "sop_count",
                                    "original": "5"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0004830360412597656
                        },
                        "line": 9
                    }
                ],
                "line": 14,
                "uri": "tests/behave/extract_links.feature",
                "description": "",
                "id": 2
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Extract links given a url -- @1.1 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "the url http://localhost:9999/sample_1.html",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://localhost:9999/sample_1.html",
                                    "name": "url"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005850791931152344
                        },
                        "line": 18
                    },
                    {
                        "keyword": "When",
                        "name": "I download and extract all links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:21",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.2834091186523438
                        },
                        "line": 19
                    },
                    {
                        "keyword": "Then",
                        "name": "I should get 5 acestream links and 4 sopcast links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:26",
                            "arguments": [
                                {
                                    "value": 5,
                                    "name": "ace_count",
                                    "original": "5"
                                },
                                {
                                    "value": 4,
                                    "name": "sop_count",
                                    "original": "4"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.00047278404235839844
                        },
                        "line": 20
                    }
                ],
                "line": 24,
                "uri": "tests/behave/extract_links.feature",
                "description": "",
                "id": 3
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Extract links given a url -- @1.2 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "the url http://localhost:9999/sample_2.html",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://localhost:9999/sample_2.html",
                                    "name": "url"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005583763122558594
                        },
                        "line": 18
                    },
                    {
                        "keyword": "When",
                        "name": "I download and extract all links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:21",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.2267627716064453
                        },
                        "line": 19
                    },
                    {
                        "keyword": "Then",
                        "name": "I should get 7 acestream links and 5 sopcast links",
                        "match": {
                            "location": "tests/behave/steps/extract_links_steps.py:26",
                            "arguments": [
                                {
                                    "value": 7,
                                    "name": "ace_count",
                                    "original": "7"
                                },
                                {
                                    "value": 5,
                                    "name": "sop_count",
                                    "original": "5"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0004734992980957031
                        },
                        "line": 20
                    }
                ],
                "line": 25,
                "uri": "tests/behave/extract_links.feature",
                "description": "",
                "id": 4
            }
        ],
        "line": 3,
        "uri": "tests/behave/extract_links.feature",
        "description": "",
        "id": 0
    },
    {
        "keyword": "Feature",
        "name": "Create a plexus history file.",
        "tags": [
            {
                "name": "@functional",
                "line": 2
            },
            {
                "name": "@fixture.external_website",
                "line": 2
            }
        ],
        "elements": [
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Create a history file from a downloaded web page and save to a txt file",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "a web url http://localhost:9999/sample_2.html",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://localhost:9999/sample_2.html",
                                    "name": "url"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.001992464065551758
                        },
                        "line": 7
                    },
                    {
                        "keyword": "When",
                        "name": "I generate a plexus history file from a downloaded web page and save to a txt file",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:34",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.2366664409637451
                        },
                        "line": 8
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect the plexus history file to look like this",
                        "text": [
                            "ACE_01|acestream://78637dab85e7948057165ad0c80b3db475dd9c3d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_02|acestream://8d9094e60cac92486cd23d1311a4ef1261a337ed|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_03|acestream://c389afdd68246467538cec05eace0ca6410e4bb4|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_04|acestream://ea1b551f853a6b2caa23eba805c5d093cba8754d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_05|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_06|acestream://edea841c6cf26dae745d6bb71e62176402f30d35|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_07|acestream://fdfee279394421f2ea89078150e1a2bb7d13f5ce|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "SOP_01|sop://broker.sopcast.com:3912/264740|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_02|sop://broker.sopcast.com:3912/264750|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_03|sop://broker.sopcast.com:3912/264752|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_04|sop://broker.sopcast.com:3912/264830|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_05|sop://broker.sopcast.com:3912/265589|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:71",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0007407665252685547
                        },
                        "line": 9
                    }
                ],
                "line": 6,
                "uri": "tests/behave/plexus_history_file.feature",
                "description": "",
                "id": 2
            },
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Create a history file from a local html file",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "a local html file tests/resources/html/sample_1.html",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:7",
                            "arguments": [
                                {
                                    "value": "tests/resources/html/sample_1.html",
                                    "name": "file"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005660057067871094
                        },
                        "line": 27
                    },
                    {
                        "keyword": "When",
                        "name": "I generate a plexus history file from a local html file",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:53",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.254845142364502
                        },
                        "line": 28
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect the plexus history file to look like this",
                        "text": [
                            "ACE_01|acestream://78637dab85e7948057165ad0c80b3db475dd9c3d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_02|acestream://c389afdd68246467538cec05eace0ca6410e4bb4|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_03|acestream://ea1b551f853a6b2caa23eba805c5d093cba8754d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_04|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_05|acestream://edea841c6cf26dae745d6bb71e62176402f30d35|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "SOP_01|sop://broker.sopcast.com:3912/264740|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_02|sop://broker.sopcast.com:3912/264750|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_03|sop://broker.sopcast.com:3912/264830|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_04|sop://broker.sopcast.com:3912/265589|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:71",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0007390975952148438
                        },
                        "line": 29
                    }
                ],
                "line": 26,
                "uri": "tests/behave/plexus_history_file.feature",
                "description": "",
                "id": 3
            },
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Create a history file from a downloaded web page",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "a web url http://localhost:9999/sample_1.html",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://localhost:9999/sample_1.html",
                                    "name": "url"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005691051483154297
                        },
                        "line": 44
                    },
                    {
                        "keyword": "When",
                        "name": "I generate a plexus history file from a downloaded web page",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:47",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.4072070121765137
                        },
                        "line": 45
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect the plexus history file to look like this",
                        "text": [
                            "ACE_01|acestream://78637dab85e7948057165ad0c80b3db475dd9c3d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_02|acestream://c389afdd68246467538cec05eace0ca6410e4bb4|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_03|acestream://ea1b551f853a6b2caa23eba805c5d093cba8754d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_04|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_05|acestream://edea841c6cf26dae745d6bb71e62176402f30d35|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "SOP_01|sop://broker.sopcast.com:3912/264740|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_02|sop://broker.sopcast.com:3912/264750|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_03|sop://broker.sopcast.com:3912/264830|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_04|sop://broker.sopcast.com:3912/265589|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:71",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.000736236572265625
                        },
                        "line": 46
                    }
                ],
                "line": 43,
                "uri": "tests/behave/plexus_history_file.feature",
                "description": "",
                "id": 4
            },
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Create a history file from html containing acestream and sopcast urls",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "a string of html",
                        "text": [
                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">",
                            "<html lang=\"de\">",
                            "<head>",
                            "<title>Sheffield Utd &ndash; Crystal Palace. LiveStream, Live \u00dcbertragung: / Fu&#223;ball. England. Premier League / 18 August / LiveTV</title>",
                            "<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; CHARSET=ISO-8859-1\">",
                            "</head>",
                            "<body>",
                            "<table  width=166 height=26 cellpadding=0 cellspacing=0  class=\"lnktbj\">",
                            "<tr>\t\t\t\t\t",
                            "<td align=\"right\" width=15><a href=\"sop://broker.sopcast.com:3912/264750\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "<td align=\"right\" width=15><a href=\"sop://broker.sopcast.com:3912/265589\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "<td align=\"right\" width=15><a href=\"sop://broker.sopcast.com:3912/264740\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "</tr>",
                            "</table>",
                            "<table  width=166 height=26 cellpadding=0 cellspacing=0  class=\"lnktbj\">",
                            "<tr>",
                            "<td align=\"right\" width=15><a href=\"acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "<td align=\"right\" width=15><a href=\"acestream://78637dab85e7948057165ad0c80b3db475dd9c3d\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "<td align=\"right\" width=15><a href=\"acestream://c389afdd68246467538cec05eace0ca6410e4bb4\"><img title=\"\u00ce\u00f2\u00ea\u00f0\u00fb\u00f2\u00fc \u00e2 \u00ef\u00f0\u00e8\u00eb\u00ee\u00e6\u00e5\u00ed\u00e8\u00e8\" src=\"//cdn.livetvcdn.club/img/webtv.gif\"></a></td>",
                            "</tr>",
                            "</table>",
                            "</body>",
                            "</html>"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:12",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005960464477539062
                        },
                        "line": 61
                    },
                    {
                        "keyword": "When",
                        "name": "I generate a plexus history file from a string of html",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:59",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.008939266204833984
                        },
                        "line": 87
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect the plexus history file to look like this",
                        "text": [
                            "ACE_01|acestream://78637dab85e7948057165ad0c80b3db475dd9c3d|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_02|acestream://c389afdd68246467538cec05eace0ca6410e4bb4|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_03|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "SOP_01|sop://broker.sopcast.com:3912/264740|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_02|sop://broker.sopcast.com:3912/264750|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_03|sop://broker.sopcast.com:3912/265589|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:71",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0006732940673828125
                        },
                        "line": 88
                    }
                ],
                "line": 60,
                "uri": "tests/behave/plexus_history_file.feature",
                "description": "",
                "id": 5
            },
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Create a history file from a string of raw acestream and sopcast urls",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "a string of raw urls",
                        "text": "SOP_EX_1|sop://broker.sopcast.com:3912/26475,sop://broker.sopcast.com:3912/265589,ACE 1|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9,acestream://c389afdd68246467538cec05eace0ca6410e4bb4",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:17",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005598068237304688
                        },
                        "line": 99
                    },
                    {
                        "keyword": "When",
                        "name": "I generate a plexus history file from a string of raw urls",
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:65",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0008165836334228516
                        },
                        "line": 103
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect the plexus history file to look like this",
                        "text": [
                            "ACE 1|acestream://ebace2db83260b4d6097f0a52e86b2aee3c3bba9|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "ACE_01|acestream://c389afdd68246467538cec05eace0ca6410e4bb4|1|/storage/.kodi/addons/program.plexus/resources/art/acestream-menu-item.png",
                            "SOP_01|sop://broker.sopcast.com:3912/265589|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg",
                            "SOP_EX_1|sop://broker.sopcast.com:3912/26475|2|/storage/.kodi/addons/program.plexus/resources/art/sopcast_logo.jpg"
                        ],
                        "match": {
                            "location": "tests/behave/steps/plexus_history_file_steps.py:71",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.0005285739898681641
                        },
                        "line": 104
                    }
                ],
                "line": 98,
                "uri": "tests/behave/plexus_history_file.feature",
                "description": "",
                "id": 6
            }
        ],
        "line": 3,
        "uri": "tests/behave/plexus_history_file.feature",
        "description": "",
        "id": 1
    },
    {
        "keyword": "Feature",
        "name": "Plexus Scraper web interface",
        "tags": [
            {
                "name": "@fixture.web_browser",
                "line": 3
            },
            {
                "name": "@fixture.settings_xml",
                "line": 3
            },
            {
                "name": "@fixture.kodi_mock",
                "line": 3
            }
        ],
        "description": "",
        "elements": [
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "Load the main web page",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/index.html\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/index.html"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.6563396453857422
                        },
                        "line": 11
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect that the title is \"My own Kodi Web Interface Addon\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/expectations.py:25",
                            "arguments": [
                                {
                                    "value": null
                                },
                                {
                                    "value": "My own Kodi Web Interface Addon"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.033624887466430664
                        },
                        "line": 12
                    }
                ],
                "line": 10,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 3
            },
            {
                "type": "scenario",
                "keyword": "Scenario",
                "name": "View the plexus scraper urls web page",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/index.html\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/index.html"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.33181095123291016
                        },
                        "line": 22
                    },
                    {
                        "keyword": "When",
                        "name": "I click on the link named \"plexus.php\"",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:6",
                            "arguments": [
                                {
                                    "value": "plexus.php",
                                    "name": "link_text"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.9876649379730225
                        },
                        "line": 23
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect to see some existing plexus scraper urls",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:16",
                            "arguments": []
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.4042627811431885
                        },
                        "line": 24
                    }
                ],
                "line": 21,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 4
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Add a new plexus scraper url -- @1.1 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/plexus.php\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/plexus.php"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.45405125617980957
                        },
                        "line": 28
                    },
                    {
                        "keyword": "When",
                        "name": "I save a new url http://somedomain.com/page_1.htm in slot url_1",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_1.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_1",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.9143619537353516
                        },
                        "line": 29
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect http://somedomain.com/page_1.htm to be saved in slot url_1",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_1.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_1",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.8591060638427734
                        },
                        "line": 30
                    }
                ],
                "line": 34,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 5
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Add a new plexus scraper url -- @1.2 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/plexus.php\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/plexus.php"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.4572432041168213
                        },
                        "line": 28
                    },
                    {
                        "keyword": "When",
                        "name": "I save a new url http://somedomain.com/page_2.htm in slot url_2",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_2.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_2",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.7100567817687988
                        },
                        "line": 29
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect http://somedomain.com/page_2.htm to be saved in slot url_2",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_2.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_2",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.8346827030181885
                        },
                        "line": 30
                    }
                ],
                "line": 35,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 6
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Add a new plexus scraper url -- @1.3 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/plexus.php\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/plexus.php"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.39081430435180664
                        },
                        "line": 28
                    },
                    {
                        "keyword": "When",
                        "name": "I save a new url http://somedomain.com/page_3.htm in slot url_3",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_3.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_3",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.7191262245178223
                        },
                        "line": 29
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect http://somedomain.com/page_3.htm to be saved in slot url_3",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_3.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_3",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.78395676612854
                        },
                        "line": 30
                    }
                ],
                "line": 36,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 7
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Add a new plexus scraper url -- @1.4 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/plexus.php\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/plexus.php"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.37150144577026367
                        },
                        "line": 28
                    },
                    {
                        "keyword": "When",
                        "name": "I save a new url http://somedomain.com/page_4.htm in slot url_4",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_4.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_4",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.653778076171875
                        },
                        "line": 29
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect http://somedomain.com/page_4.htm to be saved in slot url_4",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_4.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_4",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.9525320529937744
                        },
                        "line": 30
                    }
                ],
                "line": 37,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 8
            },
            {
                "type": "scenario",
                "keyword": "Scenario Outline",
                "name": "Add a new plexus scraper url -- @1.5 ",
                "tags": [],
                "steps": [
                    {
                        "keyword": "Given",
                        "name": "I open the url \"http://localhost:8080/plexus.php\"",
                        "match": {
                            "location": "venv/lib/python3.6/site-packages/behave_webdriver/steps/actions_re.py:60",
                            "arguments": [
                                {
                                    "value": "http://localhost:8080/plexus.php"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.45928311347961426
                        },
                        "line": 28
                    },
                    {
                        "keyword": "When",
                        "name": "I save a new url http://somedomain.com/page_5.htm in slot url_5",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:11",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_5.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_5",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 1.7846341133117676
                        },
                        "line": 29
                    },
                    {
                        "keyword": "Then",
                        "name": "I expect http://somedomain.com/page_5.htm to be saved in slot url_5",
                        "match": {
                            "location": "tests/behave/steps/web_interface_steps.py:22",
                            "arguments": [
                                {
                                    "value": "http://somedomain.com/page_5.htm",
                                    "name": "url"
                                },
                                {
                                    "value": "url_5",
                                    "name": "slot"
                                }
                            ]
                        },
                        "result": {
                            "status": "passed",
                            "duration": 0.7979316711425781
                        },
                        "line": 30
                    }
                ],
                "line": 38,
                "uri": "tests/behave/web_interface.feature",
                "description": "",
                "id": 9
            }
        ],
        "line": 4,
        "uri": "tests/behave/web_interface.feature",
        "id": 2
    }
]